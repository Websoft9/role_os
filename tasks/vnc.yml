#1 Install VNC
- block:
  - name: Install VNC Server on {{ansible_os_family}}
    yum:
      name: tigervnc-server
    when: ansible_os_family == "RedHat"
  
  - name: Install VNC Server on {{ansible_os_family}}
    apt:
      name: tightvncserver
    when: ansible_os_family == "Debian"

  - name: Create a random password for VNC
    set_fact: temp_password="{{ lookup('password', '/tmp/passwordfile length=8 chars=digits') }}"

  - debug:
      msg: Testing VNC password is {{ temp_password }}

  - name: Configure vncserver password
    expect:
      command: vncpasswd
      responses:
        "Password": "{{temp_password}}"
        "Verify": "{{temp_password}}"
        "view-only": "n"
      
#2 Configure VNC
- name: Copy vncserver.service(when system_user=root) 
  template: 
    src: vncserver.service1.j2
    dest: /lib/systemd/system/vncserver.service
    
- name: Get file stat
  stat:
    path: /root/.xsession
  register: file_status

- block:
  - name: Get dm name
    shell: | 
      cat /root/.xsession
    register: dm_name

  - name: Copy xstartup 
    template: 
      src: xstartup
      dest: /root/.vnc/xstartup
   
  - name: Copy xstartup 
    shell: chmod +x /root/.vnc/xstartup
  when: ansible_os_family == "Debian" and file_status.stat.exists

- name: Restart vncserver
  service:
    name: vncserver
    state: restarted
    enabled: yes

#3 Install and configure XRDP
- block:
  - name: Install Remote tool on {{ansible_os_family}}
    shell: yum install xrdp -y
    when: ansible_os_family == "RedHat"

  - name: Install Remote toolon {{ansible_os_family}}
    shell: apt install xrdp -y
    when: ansible_os_family == "Debian"

  - name: Start and enable xrdp
    service:
      name: xrdp
      state: restarted
      enabled: yes

#4 Check

- name: set soft link
  shell: ln -sf /lib/systemd/system/vncserver.service /lib/systemd/system/vnc.service

- block:
  - name: Check vncserver Version
    shell: sudo echo "TigerVNC version:" `vncserver -version | grep "TigerVNC" | sed -n '1p' | awk '{print $3}'` | sudo tee -a /data/logs/install_version.txt
    when: ansible_os_family == "RedHat"

  - name: Check vncserver Version
    shell: sudo echo "TightVNC version:" `vncserver -version | grep "TightVNC" | sed -n '1p' | awk -F "-" '{print $2}'` | sudo tee -a /data/logs/install_version.txt
    when: ansible_os_family == "Debian"

  - name: Check vncserver Service
    shell: systemctl status vncserver | grep Active*
    register: check_vncserver_service
    notify: check_vncserver_service
  
  - name: Check Xrdp Version
    shell: sudo echo "xrdp version:" `unbuffer xrdp --version | sed -n '1p' | awk '{print $2}'` | sudo tee -a /data/logs/install_version.txt

  - name: Check RedHat Mate Desktop Version
    shell: sudo echo "Mate Desktop version:" `ls /usr/share/doc/ | grep mate-desktop | awk -F '-' '{print $3}'` | sudo tee -a /data/logs/install_version.txt
    when: ansible_os_family == "RedHat" and os_desktop == "mate"

  - name: Check RedHat Xfce4 Desktop Version
    shell: sudo echo "Xfce4 Desktop version:" `ls /usr/share/doc | grep '^xfce4-panel' | awk -F '-' '{print $3}'` | sudo tee -a /data/logs/install_version.txt
    when: ansible_os_family == "RedHat" and os_desktop == "xfce"

  - name: Check RedHat Gnome Desktop Version
    shell: sudo echo "Gnome Desktop version:" `ls /usr/share/doc | grep '^gnome-desktop' | awk -F '-' '{print $3}'` | sudo tee -a /data/logs/install_version.txt
    when: ansible_os_family == "RedHat" and os_desktop == "gnome"

  - name: Check RedHat KDE Desktop Version
    shell: sudo echo "KDE Desktop version:" `ls /usr/share/doc | grep '^kdelibs' | awk -F '-' '{print $2}'` | sudo tee -a /data/logs/install_version.txt
    when: ansible_os_family == "RedHat" and os_desktop == "kde"

  - name: Check Debian Xfce4 Desktop Version
    shell: sudo echo "Xfce4 Desktop version:" `dpkg -l | grep 'xfce4' -w | sed -n '1p' | awk -F ' ' '{print $3}'` | sudo tee -a /data/logs/install_version.txt
    when: ansible_os_family == "Debian" and os_desktop == "xfce"

  - name: Check Debian Mate Desktop Version
    shell: sudo echo "Mate Desktop version:" `grep -E 'Version' /usr/share/doc/mate-session-manager/dbus/mate-session.html | awk '{print $3}' | awk -F '<' '{print $1}'` | sudo tee -a /data/logs/install_version.txt
    when: ansible_os_family == "Debian" and os_desktop == "mate"

  - name: Check Debian Gnome Desktop Version
    shell: sudo echo "Gnome Desktop version:" `gnome-shell --version | awk '{print $3}'` | sudo tee -a /data/logs/install_version.txt
    when: ansible_os_family == "Debian" and os_desktop == "gnome"

  - name: Check Debian KDE Desktop Version
    shell: sudo echo "KDE Desktop version:" `grep 'X-KDE-PluginInfo-Version' /usr/share/kservices5/plasma-dataengine-touchpad.desktop | awk -F '=' '{print $2}'` | sudo tee -a /data/logs/install_version.txt
    when: ansible_os_family == "Debian" and os_desktop == "kde"

  - name: Check xrdp Service
    shell: systemctl status xrdp | grep Active*
    register: check_xrdp_service
    notify: check_xrdp_service
